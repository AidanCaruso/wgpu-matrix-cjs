{"version":3,"file":"wgpu-matrix.min.js","sources":["../../../src/wgpu-matrix.ts"],"sourcesContent":["/**\n * Some docs\n * @namespace wgpu-matrix\n */\nimport {MutableNumberArray, BaseArgType, ZeroArray} from './types';\nimport {Mat3Arg, Mat3Type, getAPI as getMat3API} from './mat3-impl';\nimport {Mat4Arg, Mat4Type, getAPI as getMat4API} from './mat4-impl';\nimport {QuatArg, QuatType, getAPI as getQuatAPI, RotationOrder} from './quat-impl';\nimport {Vec2Arg, Vec2Type, getAPI as getVec2API} from './vec2-impl';\nimport {Vec3Arg, Vec3Type, getAPI as getVec3API} from './vec3-impl';\nimport {Vec4Arg, Vec4Type, getAPI as getVec4API} from './vec4-impl';\nimport * as utils from './utils';\n\nexport {\n  RotationOrder,\n  utils,\n\n  MutableNumberArray,\n  BaseArgType,\n\n  Mat3Arg,\n  Mat4Arg,\n  QuatArg,\n  Vec2Arg,\n  Vec3Arg,\n  Vec4Arg,\n\n  Mat3Type,\n  Mat4Type,\n  QuatType,\n  Vec2Type,\n  Vec3Type,\n  Vec4Type,\n};\n\nexport type BaseCtor<T extends BaseArgType>  = new (n: number) => T;\n\nexport type Mat3 = Mat3Type<Float32Array>;\nexport type Mat4 = Mat4Type<Float32Array>;\nexport type Quat = QuatType<Float32Array>;\nexport type Vec2 = Vec2Type<Float32Array>;\nexport type Vec3 = Vec3Type<Float32Array>;\nexport type Vec4 = Vec4Type<Float32Array>;\n\nexport type Mat3d = Mat3Type<Float64Array>;\nexport type Mat4d = Mat4Type<Float64Array>;\nexport type Quatd = QuatType<Float64Array>;\nexport type Vec2d = Vec2Type<Float64Array>;\nexport type Vec3d = Vec3Type<Float64Array>;\nexport type Vec4d = Vec4Type<Float64Array>;\n\nexport type Mat3n = Mat3Type<number[]>;\nexport type Mat4n = Mat4Type<number[]>;\nexport type Quatn = QuatType<number[]>;\nexport type Vec2n = Vec2Type<number[]>;\nexport type Vec3n = Vec3Type<number[]>;\nexport type Vec4n = Vec4Type<number[]>;\n\n/**\n * Generate wgpu-matrix API for type\n */\nfunction wgpuMatrixAPI<\n    Mat3 extends BaseArgType,\n    Mat4 extends BaseArgType,\n    Quat extends BaseArgType,\n    Vec2 extends BaseArgType,\n    Vec3 extends BaseArgType,\n    Vec4 extends BaseArgType,\n>(\n    Mat3Ctor: BaseCtor<Mat3>,\n    Mat4Ctor: BaseCtor<Mat4>,\n    QuatCtor: BaseCtor<Quat>,\n    Vec2Ctor: BaseCtor<Vec2>,\n    Vec3Ctor: BaseCtor<Vec3>,\n    Vec4Ctor: BaseCtor<Vec4>,\n) {\n  return {\n    /** @namespace mat3 */\n    mat3: getMat3API<Mat3>(Mat3Ctor),\n    /** @namespace mat4 */\n    mat4: getMat4API<Mat4>(Mat4Ctor),\n    /** @namespace quat */\n    quat: getQuatAPI<Quat>(QuatCtor),\n    /** @namespace vec2 */\n    vec2: getVec2API<Vec2>(Vec2Ctor),\n    /** @namespace vec3 */\n    vec3: getVec3API<Vec3>(Vec3Ctor),\n    /** @namespace vec4 */\n    vec4: getVec4API<Vec4>(Vec4Ctor),\n  };\n}\n\nexport const {\n  /**\n   * 3x3 Matrix functions that default to returning `Float32Array`\n   * @namespace\n   */\n  mat3,\n  /**\n   * 4x4 Matrix functions that default to returning `Float32Array`\n   * @namespace\n   */\n  mat4,\n  /**\n   * Quaternion functions that default to returning `Float32Array`\n   * @namespace\n   */\n  quat,\n  /**\n   * Vec2 functions that default to returning `Float32Array`\n   * @namespace\n   */\n  vec2,\n  /**\n   * Vec3 functions that default to returning `Float32Array`\n   * @namespace\n   */\n  vec3,\n  /**\n   * Vec3 functions that default to returning `Float32Array`\n   * @namespace\n   */\n  vec4,\n} = wgpuMatrixAPI<\n  Mat3, Mat4, Quat, Vec2, Vec3, Vec4>(\n    Float32Array, Float32Array, Float32Array, Float32Array, Float32Array, Float32Array);\n\nexport const {\n  /**\n   * 3x3 Matrix functions that default to returning `Float64Array`\n   * @namespace\n   */\n  mat3: mat3d,\n  /**\n   * 4x4 Matrix functions that default to returning `Float64Array`\n   * @namespace\n   */\n  mat4: mat4d,\n  /**\n   * Quaternion functions that default to returning `Float64Array`\n   * @namespace\n   */\n  quat: quatd,\n  /**\n   * Vec2 functions that default to returning `Float64Array`\n   * @namespace\n   */\n  vec2: vec2d,\n  /**\n   * Vec3 functions that default to returning `Float64Array`\n   * @namespace\n   */\n  vec3: vec3d,\n  /**\n   * Vec3 functions that default to returning `Float64Array`\n   * @namespace\n   */\n  vec4: vec4d,\n} = wgpuMatrixAPI<\n  Mat3d, Mat4d, Quatd, Vec2d, Vec3d, Vec4d>(\n    Float64Array, Float64Array, Float64Array, Float64Array, Float64Array, Float64Array);\n\nexport const {\n  /**\n   * 3x3 Matrix functions that default to returning `number[]`\n   * @namespace\n   */\n  mat3: mat3n,\n  /**\n   * 4x4 Matrix functions that default to returning `number[]`\n   * @namespace\n   */\n  mat4: mat4n,\n  /**\n   * Quaternion functions that default to returning `number[]`\n   * @namespace\n   */\n  quat: quatn,\n  /**\n   * Vec2 functions that default to returning `number[]`\n   * @namespace\n   */\n  vec2: vec2n,\n  /**\n   * Vec3 functions that default to returning `number[]`\n   * @namespace\n   */\n  vec3: vec3n,\n  /**\n   * Vec3 functions that default to returning `number[]`\n   * @namespace\n   */\n  vec4: vec4n,\n} = wgpuMatrixAPI<\n  Mat3n, Mat4n, Quatn, Vec2n, Vec3n, Vec4n>(\n    ZeroArray, Array, Array, Array, Array, Array);\n"],"names":["types_1","require","mat3_impl_1","mat4_impl_1","quat_impl_1","vec2_impl_1","vec3_impl_1","vec4_impl_1","utils","tslib_1","__importStar","wgpuMatrixAPI","Mat3Ctor","Mat4Ctor","QuatCtor","Vec2Ctor","Vec3Ctor","Vec4Ctor","mat3","getAPI","mat4","quat","vec2","vec3","vec4","exports","_a","Float32Array","_b","Float64Array","mat3d","mat4d","quatd","vec2d","vec3d","vec4d","_c","ZeroArray","Array","mat3n","mat4n","quatn","vec2n","vec3n","vec4n"],"mappings":"gcAImEA,EAAAC,QAAA,WACCC,EAAAD,QAAA,eACAE,EAAAF,QAAA,eACeG,EAAAH,QAAA,eACfI,EAAAJ,QAAA,eACAK,EAAAL,QAAA,eACAM,EAAAN,QAAA,eACnCO,EAAAC,EAAAC,aAAAT,QAAA,YAkDjC,SAASU,EAQLC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEF,MAAO,CAELC,MAAM,EAAAhB,EAAUiB,QAAOP,GAEvBQ,MAAM,EAAAjB,EAAUgB,QAAON,GAEvBQ,MAAM,EAAAjB,EAAUe,QAAOL,GAEvBQ,MAAM,EAAAjB,EAAUc,QAAOJ,GAEvBQ,MAAM,EAAAjB,EAAUa,QAAOH,GAEvBQ,MAAM,EAAAjB,EAAUY,QAAOF,GAE3B,CA3EEQ,QAAKjB,MAAAA,EA6EMkB,EA+BTf,EAEAgB,aAAcA,aAAcA,aAAcA,aAAcA,aAAcA,cA5BxEF,QAAIP,KAAAQ,EAAAR,KAKJO,QAAIL,KAAAM,EAAAN,KAKJK,QAAIJ,KAAAK,EAAAL,KAKJI,QAAIH,KAAAI,EAAAJ,KAKJG,QAAIF,KAAAG,EAAAH,KAKJE,QAAAD,KAGsFE,EAAAF,KAE3EI,EA+BTjB,EAEAkB,aAAcA,aAAcA,aAAcA,aAAcA,aAAcA,cA5BlEJ,QAAAK,MAKAF,EAAAV,KAAAO,QAAAM,MAKAH,EAAAR,KAAAK,QAAAO,MAKAJ,EAAAP,KAAAI,QAAAQ,MAKAL,EAAAN,KAAAG,QAAAS,MAKAN,EAAAL,KAAAE,QAAAU,MAGgFP,EAAAJ,KAE3EY,EA+BTzB,EAEAX,EAAAqC,UAAWC,MAAOA,MAAOA,MAAOA,MAAOA,OA5BnCb,QAAAc,MAKAH,EAAAlB,KAAAO,QAAAe,MAKAJ,EAAAhB,KAAAK,QAAAgB,MAKAL,EAAAf,KAAAI,QAAAiB,MAKAN,EAAAd,KAAAG,QAAAkB,MAKAP,EAAAb,KAAAE,QAAAmB,MAG0CR,EAAAZ"}